<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="3" total="20" passed="17" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-11-22T23:43:54 IST" name="Suite" finished-at="2022-11-22T23:44:09 IST" duration-ms="14592">
    <groups>
    </groups>
    <test started-at="2022-11-22T23:43:54 IST" name="Test" finished-at="2022-11-22T23:44:09 IST" duration-ms="14592">
      <class name="testData.Cards">
        <test-method is-config="true" signature="setUpRequest()[pri:0, instance:testData.Cards@4007f65e]" started-at="2022-11-22T23:44:06 IST" name="setUpRequest" finished-at="2022-11-22T23:44:06 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpRequest -->
        <test-method is-config="true" signature="setupTest()[pri:0, instance:testData.Cards@4007f65e]" started-at="2022-11-22T23:44:06 IST" name="setupTest" finished-at="2022-11-22T23:44:06 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Create_a_card()[pri:0, instance:testData.Cards@4007f65e]" started-at="2022-11-22T23:44:06 IST" name="Create_a_card" finished-at="2022-11-22T23:44:07 IST" duration-ms="930" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Create_a_card -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:testData.Cards@4007f65e]" started-at="2022-11-22T23:44:06 IST" name="startTest" finished-at="2022-11-22T23:44:06 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testData.Cards.Create_a_card() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="reportFlush(org.testng.ITestResult)[pri:0, instance:testData.Cards@4007f65e]" started-at="2022-11-22T23:44:07 IST" name="reportFlush" finished-at="2022-11-22T23:44:07 IST" duration-ms="13" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Create_a_card status=SUCCESS method=Cards.Create_a_card()[pri:0, instance:testData.Cards@4007f65e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportFlush -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:testData.Cards@4007f65e]" started-at="2022-11-22T23:44:07 IST" name="startTest" finished-at="2022-11-22T23:44:07 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testData.Cards.update_a_card() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="setUpRequest()[pri:0, instance:testData.Cards@4007f65e]" started-at="2022-11-22T23:44:07 IST" name="setUpRequest" finished-at="2022-11-22T23:44:07 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpRequest -->
        <test-method signature="update_a_card()[pri:1, instance:testData.Cards@4007f65e]" started-at="2022-11-22T23:44:07 IST" name="update_a_card" finished-at="2022-11-22T23:44:07 IST" duration-ms="650" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- update_a_card -->
        <test-method is-config="true" signature="reportFlush(org.testng.ITestResult)[pri:0, instance:testData.Cards@4007f65e]" started-at="2022-11-22T23:44:07 IST" name="reportFlush" finished-at="2022-11-22T23:44:07 IST" duration-ms="15" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=update_a_card status=SUCCESS method=Cards.update_a_card()[pri:1, instance:testData.Cards@4007f65e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportFlush -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:testData.Cards@4007f65e]" started-at="2022-11-22T23:44:07 IST" name="startTest" finished-at="2022-11-22T23:44:07 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testData.Cards.get_a_card() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="get_a_card()[pri:2, instance:testData.Cards@4007f65e]" started-at="2022-11-22T23:44:07 IST" name="get_a_card" finished-at="2022-11-22T23:44:08 IST" duration-ms="595" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- get_a_card -->
        <test-method is-config="true" signature="setUpRequest()[pri:0, instance:testData.Cards@4007f65e]" started-at="2022-11-22T23:44:07 IST" name="setUpRequest" finished-at="2022-11-22T23:44:07 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpRequest -->
        <test-method is-config="true" signature="reportFlush(org.testng.ITestResult)[pri:0, instance:testData.Cards@4007f65e]" started-at="2022-11-22T23:44:08 IST" name="reportFlush" finished-at="2022-11-22T23:44:08 IST" duration-ms="43" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=get_a_card status=SUCCESS method=Cards.get_a_card()[pri:2, instance:testData.Cards@4007f65e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportFlush -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:testData.Cards@4007f65e]" started-at="2022-11-22T23:44:08 IST" name="startTest" finished-at="2022-11-22T23:44:08 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testData.Cards.delete_a_card() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="setUpRequest()[pri:0, instance:testData.Cards@4007f65e]" started-at="2022-11-22T23:44:08 IST" name="setUpRequest" finished-at="2022-11-22T23:44:08 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpRequest -->
        <test-method signature="delete_a_card()[pri:3, instance:testData.Cards@4007f65e]" started-at="2022-11-22T23:44:08 IST" name="delete_a_card" finished-at="2022-11-22T23:44:09 IST" duration-ms="682" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delete_a_card -->
        <test-method is-config="true" signature="reportFlush(org.testng.ITestResult)[pri:0, instance:testData.Cards@4007f65e]" started-at="2022-11-22T23:44:09 IST" name="reportFlush" finished-at="2022-11-22T23:44:09 IST" duration-ms="17" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=delete_a_card status=SUCCESS method=Cards.delete_a_card()[pri:3, instance:testData.Cards@4007f65e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportFlush -->
      </class> <!-- testData.Cards -->
      <class name="testData.Organization">
        <test-method is-config="true" signature="setupTest()[pri:0, instance:testData.Organization@6f01b95f]" started-at="2022-11-22T23:44:02 IST" name="setupTest" finished-at="2022-11-22T23:44:02 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method is-config="true" signature="setUpRequest()[pri:0, instance:testData.Organization@6f01b95f]" started-at="2022-11-22T23:44:02 IST" name="setUpRequest" finished-at="2022-11-22T23:44:02 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpRequest -->
        <test-method signature="Create_an_Organization()[pri:0, instance:testData.Organization@6f01b95f]" started-at="2022-11-22T23:44:02 IST" name="Create_an_Organization" finished-at="2022-11-22T23:44:03 IST" duration-ms="710" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Create_an_Organization -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:testData.Organization@6f01b95f]" started-at="2022-11-22T23:44:02 IST" name="startTest" finished-at="2022-11-22T23:44:02 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testData.Organization.Create_an_Organization() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="reportFlush(org.testng.ITestResult)[pri:0, instance:testData.Organization@6f01b95f]" started-at="2022-11-22T23:44:03 IST" name="reportFlush" finished-at="2022-11-22T23:44:03 IST" duration-ms="13" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Create_an_Organization status=SUCCESS method=Organization.Create_an_Organization()[pri:0, instance:testData.Organization@6f01b95f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportFlush -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:testData.Organization@6f01b95f]" started-at="2022-11-22T23:44:03 IST" name="startTest" finished-at="2022-11-22T23:44:03 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testData.Organization.Update_an_Organization() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="Update_an_Organization()[pri:1, instance:testData.Organization@6f01b95f]" started-at="2022-11-22T23:44:03 IST" name="Update_an_Organization" finished-at="2022-11-22T23:44:04 IST" duration-ms="704" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Update_an_Organization -->
        <test-method is-config="true" signature="setUpRequest()[pri:0, instance:testData.Organization@6f01b95f]" started-at="2022-11-22T23:44:03 IST" name="setUpRequest" finished-at="2022-11-22T23:44:03 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpRequest -->
        <test-method is-config="true" signature="reportFlush(org.testng.ITestResult)[pri:0, instance:testData.Organization@6f01b95f]" started-at="2022-11-22T23:44:04 IST" name="reportFlush" finished-at="2022-11-22T23:44:04 IST" duration-ms="18" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Update_an_Organization status=SUCCESS method=Organization.Update_an_Organization()[pri:1, instance:testData.Organization@6f01b95f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportFlush -->
        <test-method signature="Get_an_Organization()[pri:2, instance:testData.Organization@6f01b95f]" started-at="2022-11-22T23:44:04 IST" name="Get_an_Organization" finished-at="2022-11-22T23:44:04 IST" duration-ms="541" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Get_an_Organization -->
        <test-method is-config="true" signature="setUpRequest()[pri:0, instance:testData.Organization@6f01b95f]" started-at="2022-11-22T23:44:04 IST" name="setUpRequest" finished-at="2022-11-22T23:44:04 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpRequest -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:testData.Organization@6f01b95f]" started-at="2022-11-22T23:44:04 IST" name="startTest" finished-at="2022-11-22T23:44:04 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testData.Organization.Get_an_Organization() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="reportFlush(org.testng.ITestResult)[pri:0, instance:testData.Organization@6f01b95f]" started-at="2022-11-22T23:44:04 IST" name="reportFlush" finished-at="2022-11-22T23:44:04 IST" duration-ms="22" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Get_an_Organization status=SUCCESS method=Organization.Get_an_Organization()[pri:2, instance:testData.Organization@6f01b95f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportFlush -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:testData.Organization@6f01b95f]" started-at="2022-11-22T23:44:04 IST" name="startTest" finished-at="2022-11-22T23:44:04 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testData.Organization.delete_an_Organization() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="setUpRequest()[pri:0, instance:testData.Organization@6f01b95f]" started-at="2022-11-22T23:44:04 IST" name="setUpRequest" finished-at="2022-11-22T23:44:04 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpRequest -->
        <test-method signature="delete_an_Organization()[pri:3, instance:testData.Organization@6f01b95f]" started-at="2022-11-22T23:44:04 IST" name="delete_an_Organization" finished-at="2022-11-22T23:44:06 IST" duration-ms="1352" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delete_an_Organization -->
        <test-method is-config="true" signature="reportFlush(org.testng.ITestResult)[pri:0, instance:testData.Organization@6f01b95f]" started-at="2022-11-22T23:44:06 IST" name="reportFlush" finished-at="2022-11-22T23:44:06 IST" duration-ms="16" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=delete_an_Organization status=SUCCESS method=Organization.delete_an_Organization()[pri:3, instance:testData.Organization@6f01b95f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportFlush -->
      </class> <!-- testData.Organization -->
      <class name="testData.Boards">
        <test-method is-config="true" signature="setupTest()[pri:0, instance:testData.Boards@7d900ecf]" started-at="2022-11-22T23:43:59 IST" name="setupTest" finished-at="2022-11-22T23:43:59 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:testData.Boards@7d900ecf]" started-at="2022-11-22T23:43:59 IST" name="startTest" finished-at="2022-11-22T23:43:59 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testData.Boards.Create_a_board() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="Create_a_board()[pri:0, instance:testData.Boards@7d900ecf]" started-at="2022-11-22T23:43:59 IST" name="Create_a_board" finished-at="2022-11-22T23:43:59 IST" duration-ms="760" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Create_a_board -->
        <test-method is-config="true" signature="setUpRequest()[pri:0, instance:testData.Boards@7d900ecf]" started-at="2022-11-22T23:43:59 IST" name="setUpRequest" finished-at="2022-11-22T23:43:59 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpRequest -->
        <test-method is-config="true" signature="reportFlush(org.testng.ITestResult)[pri:0, instance:testData.Boards@7d900ecf]" started-at="2022-11-22T23:43:59 IST" name="reportFlush" finished-at="2022-11-22T23:43:59 IST" duration-ms="15" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Create_a_board status=SUCCESS method=Boards.Create_a_board()[pri:0, instance:testData.Boards@7d900ecf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportFlush -->
        <test-method signature="Update_board()[pri:1, instance:testData.Boards@7d900ecf]" started-at="2022-11-22T23:43:59 IST" name="Update_board" finished-at="2022-11-22T23:44:00 IST" duration-ms="678" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Update_board -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:testData.Boards@7d900ecf]" started-at="2022-11-22T23:43:59 IST" name="startTest" finished-at="2022-11-22T23:43:59 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testData.Boards.Update_board() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="setUpRequest()[pri:0, instance:testData.Boards@7d900ecf]" started-at="2022-11-22T23:43:59 IST" name="setUpRequest" finished-at="2022-11-22T23:43:59 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpRequest -->
        <test-method is-config="true" signature="reportFlush(org.testng.ITestResult)[pri:0, instance:testData.Boards@7d900ecf]" started-at="2022-11-22T23:44:00 IST" name="reportFlush" finished-at="2022-11-22T23:44:00 IST" duration-ms="37" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Update_board status=SUCCESS method=Boards.Update_board()[pri:1, instance:testData.Boards@7d900ecf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportFlush -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:testData.Boards@7d900ecf]" started-at="2022-11-22T23:44:00 IST" name="startTest" finished-at="2022-11-22T23:44:00 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testData.Boards.Get_a_board() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="setUpRequest()[pri:0, instance:testData.Boards@7d900ecf]" started-at="2022-11-22T23:44:00 IST" name="setUpRequest" finished-at="2022-11-22T23:44:00 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpRequest -->
        <test-method signature="Get_a_board()[pri:2, instance:testData.Boards@7d900ecf]" started-at="2022-11-22T23:44:00 IST" name="Get_a_board" finished-at="2022-11-22T23:44:01 IST" duration-ms="562" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Get_a_board -->
        <test-method is-config="true" signature="reportFlush(org.testng.ITestResult)[pri:0, instance:testData.Boards@7d900ecf]" started-at="2022-11-22T23:44:01 IST" name="reportFlush" finished-at="2022-11-22T23:44:01 IST" duration-ms="21" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Get_a_board status=SUCCESS method=Boards.Get_a_board()[pri:2, instance:testData.Boards@7d900ecf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportFlush -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:testData.Boards@7d900ecf]" started-at="2022-11-22T23:44:01 IST" name="startTest" finished-at="2022-11-22T23:44:01 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testData.Boards.Delete_board() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="setUpRequest()[pri:0, instance:testData.Boards@7d900ecf]" started-at="2022-11-22T23:44:01 IST" name="setUpRequest" finished-at="2022-11-22T23:44:01 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpRequest -->
        <test-method signature="Delete_board()[pri:3, instance:testData.Boards@7d900ecf]" started-at="2022-11-22T23:44:01 IST" name="Delete_board" finished-at="2022-11-22T23:44:02 IST" duration-ms="993" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Delete_board -->
        <test-method is-config="true" signature="reportFlush(org.testng.ITestResult)[pri:0, instance:testData.Boards@7d900ecf]" started-at="2022-11-22T23:44:02 IST" name="reportFlush" finished-at="2022-11-22T23:44:02 IST" duration-ms="20" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Delete_board status=SUCCESS method=Boards.Delete_board()[pri:3, instance:testData.Boards@7d900ecf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportFlush -->
        <test-method is-config="true" signature="setUpRequest()[pri:0, instance:testData.Boards@7d900ecf]" started-at="2022-11-22T23:44:02 IST" name="setUpRequest" finished-at="2022-11-22T23:44:02 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpRequest -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:testData.Boards@7d900ecf]" started-at="2022-11-22T23:44:02 IST" name="startTest" finished-at="2022-11-22T23:44:02 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testData.Boards.Negativedata() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="Negativedata()[pri:4, instance:testData.Boards@7d900ecf]" started-at="2022-11-22T23:44:02 IST" name="Negativedata" finished-at="2022-11-22T23:44:02 IST" duration-ms="535" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Negativedata -->
        <test-method is-config="true" signature="reportFlush(org.testng.ITestResult)[pri:0, instance:testData.Boards@7d900ecf]" started-at="2022-11-22T23:44:02 IST" name="reportFlush" finished-at="2022-11-22T23:44:02 IST" duration-ms="14" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Negativedata status=SUCCESS method=Boards.Negativedata()[pri:4, instance:testData.Boards@7d900ecf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportFlush -->
      </class> <!-- testData.Boards -->
      <class name="testData.Checklist">
        <test-method is-config="true" signature="init()[pri:0, instance:testData.Checklist@21e360a]" started-at="2022-11-22T23:43:54 IST" name="init" finished-at="2022-11-22T23:43:54 IST" duration-ms="94" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method is-config="true" signature="setupTest()[pri:0, instance:testData.Checklist@21e360a]" started-at="2022-11-22T23:43:54 IST" name="setupTest" finished-at="2022-11-22T23:43:54 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:testData.Checklist@21e360a]" started-at="2022-11-22T23:43:54 IST" name="startTest" finished-at="2022-11-22T23:43:55 IST" duration-ms="472" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testData.Checklist.Create_a_checklist() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="setUpRequest()[pri:0, instance:testData.Checklist@21e360a]" started-at="2022-11-22T23:43:55 IST" name="setUpRequest" finished-at="2022-11-22T23:43:55 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpRequest -->
        <test-method signature="Create_a_checklist()[pri:0, instance:testData.Checklist@21e360a]" started-at="2022-11-22T23:43:55 IST" name="Create_a_checklist" finished-at="2022-11-22T23:43:56 IST" duration-ms="1862" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Create_a_checklist -->
        <test-method is-config="true" signature="reportFlush(org.testng.ITestResult)[pri:0, instance:testData.Checklist@21e360a]" started-at="2022-11-22T23:43:56 IST" name="reportFlush" finished-at="2022-11-22T23:43:57 IST" duration-ms="271" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Create_a_checklist status=SUCCESS method=Checklist.Create_a_checklist()[pri:0, instance:testData.Checklist@21e360a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportFlush -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:testData.Checklist@21e360a]" started-at="2022-11-22T23:43:57 IST" name="startTest" finished-at="2022-11-22T23:43:57 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testData.Checklist.Update_a_Checklist() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="Update_a_Checklist()[pri:1, instance:testData.Checklist@21e360a]" started-at="2022-11-22T23:43:57 IST" name="Update_a_Checklist" finished-at="2022-11-22T23:43:57 IST" duration-ms="654" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Update_a_Checklist -->
        <test-method is-config="true" signature="setUpRequest()[pri:0, instance:testData.Checklist@21e360a]" started-at="2022-11-22T23:43:57 IST" name="setUpRequest" finished-at="2022-11-22T23:43:57 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpRequest -->
        <test-method is-config="true" signature="reportFlush(org.testng.ITestResult)[pri:0, instance:testData.Checklist@21e360a]" started-at="2022-11-22T23:43:57 IST" name="reportFlush" finished-at="2022-11-22T23:43:57 IST" duration-ms="29" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Update_a_Checklist status=SUCCESS method=Checklist.Update_a_Checklist()[pri:1, instance:testData.Checklist@21e360a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportFlush -->
        <test-method is-config="true" signature="setUpRequest()[pri:0, instance:testData.Checklist@21e360a]" started-at="2022-11-22T23:43:57 IST" name="setUpRequest" finished-at="2022-11-22T23:43:57 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpRequest -->
        <test-method signature="Get_a_Checklist()[pri:2, instance:testData.Checklist@21e360a]" started-at="2022-11-22T23:43:57 IST" name="Get_a_Checklist" finished-at="2022-11-22T23:43:58 IST" duration-ms="592" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Get_a_Checklist -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:testData.Checklist@21e360a]" started-at="2022-11-22T23:43:57 IST" name="startTest" finished-at="2022-11-22T23:43:57 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testData.Checklist.Get_a_Checklist() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="reportFlush(org.testng.ITestResult)[pri:0, instance:testData.Checklist@21e360a]" started-at="2022-11-22T23:43:58 IST" name="reportFlush" finished-at="2022-11-22T23:43:58 IST" duration-ms="19" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Get_a_Checklist status=SUCCESS method=Checklist.Get_a_Checklist()[pri:2, instance:testData.Checklist@21e360a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportFlush -->
        <test-method is-config="true" signature="setUpRequest()[pri:0, instance:testData.Checklist@21e360a]" started-at="2022-11-22T23:43:58 IST" name="setUpRequest" finished-at="2022-11-22T23:43:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpRequest -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:testData.Checklist@21e360a]" started-at="2022-11-22T23:43:58 IST" name="startTest" finished-at="2022-11-22T23:43:58 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testData.Checklist.delete_a_Checklist() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="delete_a_Checklist()[pri:3, instance:testData.Checklist@21e360a]" started-at="2022-11-22T23:43:58 IST" name="delete_a_Checklist" finished-at="2022-11-22T23:43:59 IST" duration-ms="659" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delete_a_Checklist -->
        <test-method is-config="true" signature="reportFlush(org.testng.ITestResult)[pri:0, instance:testData.Checklist@21e360a]" started-at="2022-11-22T23:43:59 IST" name="reportFlush" finished-at="2022-11-22T23:43:59 IST" duration-ms="17" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=delete_a_Checklist status=SUCCESS method=Checklist.delete_a_Checklist()[pri:3, instance:testData.Checklist@21e360a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportFlush -->
      </class> <!-- testData.Checklist -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
